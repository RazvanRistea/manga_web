{"name": "test[features/forgot_password.feature-Forgot password tests-Reset password for a email that does not have an account]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001033ff0fc chromedriver + 4223228\n1   chromedriver                        0x0000000103387284 chromedriver + 3732100\n2   chromedriver                        0x000000010303b5c8 chromedriver + 275912\n3   chromedriver                        0x00000001030771b8 chromedriver + 520632\n4   chromedriver                        0x00000001030af360 chromedriver + 750432\n5   chromedriver                        0x0000000103069748 chromedriver + 464712\n6   chromedriver                        0x000000010306a7f0 chromedriver + 468976\n7   chromedriver                        0x00000001033cfe08 chromedriver + 4029960\n8   chromedriver                        0x00000001033d3698 chromedriver + 4044440\n9   chromedriver                        0x00000001033d3cc0 chromedriver + 4046016\n10  chromedriver                        0x00000001033da4c4 chromedriver + 4072644\n11  chromedriver                        0x00000001033d436c chromedriver + 4047724\n12  chromedriver                        0x00000001033acbd8 chromedriver + 3886040\n13  chromedriver                        0x00000001033f0efc chromedriver + 4165372\n14  chromedriver                        0x00000001033f1050 chromedriver + 4165712\n15  chromedriver                        0x0000000103405e20 chromedriver + 4251168\n16  libsystem_pthread.dylib             0x0000000189a5d06c _pthread_start + 148\n17  libsystem_pthread.dylib             0x0000000189a57e2c thread_start + 8", "trace": "self = <pytest_bdd.runner.ScenarioRunner object at 0x109361750>, item = <Function test[features/forgot_password.feature-Forgot password tests-Reset password for a email that does not have an account]>\n\n    def pytest_runtest_call(self, item: Item):\n        if \"pytest_bdd_scenario\" in list(map(attrgetter(\"name\"), item.iter_markers())):\n            self.request = item._request\n            self.feature = self.request.getfixturevalue(\"feature\")\n            self.scenario = self.request.getfixturevalue(\"scenario\")\n            self.plugin_manager = self.request.config.hook\n            self.plugin_manager.pytest_bdd_before_scenario(\n                request=self.request, feature=self.feature, scenario=self.scenario\n            )\n            try:\n>               self.plugin_manager.pytest_bdd_run_scenario(\n                    request=self.request,\n                    feature=self.feature,\n                    scenario=self.scenario,\n                )\n\n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:57: in pytest_bdd_run_scenario\n    return step_dispatcher(steps)\n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:67: in dispatcher\n    self.plugin_manager.pytest_bdd_run_step(\n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:108: in pytest_bdd_run_step\n    step_result = step_caller()\ntest_reset_password.py:68: in reset_password_no_user\n    pages[\"about_page\"].click_cookie_pop_up_ok_btn()\n../pages/about_page.py:29: in click_cookie_pop_up_ok_btn\n    BasePage.click(self, self.COOKIE_POP_UP_OK_BUTTON)\n../pages/base_page.py:44: in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eb47526b041559ae2570505ac6b00369\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x10a81e170>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001033ff0fc chromedriver + 4223228\nE       1   chromedriver                        0x0000000103387284 chromedriver + 3732100\nE       2   chromedriver                        0x000000010303b5c8 chromedriver + 275912\nE       3   chromedriver                        0x00000001030771b8 chromedriver + 520632\nE       4   chromedriver                        0x00000001030af360 chromedriver + 750432\nE       5   chromedriver                        0x0000000103069748 chromedriver + 464712\nE       6   chromedriver                        0x000000010306a7f0 chromedriver + 468976\nE       7   chromedriver                        0x00000001033cfe08 chromedriver + 4029960\nE       8   chromedriver                        0x00000001033d3698 chromedriver + 4044440\nE       9   chromedriver                        0x00000001033d3cc0 chromedriver + 4046016\nE       10  chromedriver                        0x00000001033da4c4 chromedriver + 4072644\nE       11  chromedriver                        0x00000001033d436c chromedriver + 4047724\nE       12  chromedriver                        0x00000001033acbd8 chromedriver + 3886040\nE       13  chromedriver                        0x00000001033f0efc chromedriver + 4165372\nE       14  chromedriver                        0x00000001033f1050 chromedriver + 4165712\nE       15  chromedriver                        0x0000000103405e20 chromedriver + 4251168\nE       16  libsystem_pthread.dylib             0x0000000189a5d06c _pthread_start + 148\nE       17  libsystem_pthread.dylib             0x0000000189a57e2c thread_start + 8\n\n../venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "steps": [{"name": "Reset password for a email that does not have an account [features/forgot_password.feature-Forgot password tests-Reset password for a email that does not have an account]", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "User is not logged in.", "status": "passed", "steps": [{"name": "Checking if user is not logged in.", "status": "passed", "steps": [{"name": "Assert Message equals.", "status": "passed", "parameters": [{"name": "actual", "value": "True"}, {"name": "expected", "value": "True"}], "start": 1675060535660, "stop": 1675060535660}], "start": 1675060535635, "stop": 1675060535660}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1095b1fc0>, 'login_page': <pages.login_page.LoginPage object at 0x1095b2740>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x10a830b50>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10a8300a0>}"}], "start": 1675060535635, "stop": 1675060535660}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1095b1fc0>, 'login_page': <pages.login_page.LoginPage object at 0x1095b2740>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x10a830b50>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10a8300a0>}"}], "start": 1675060535635, "stop": 1675060535660}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1095b1fc0>, 'login_page': <pages.login_page.LoginPage object at 0x1095b2740>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x10a830b50>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10a8300a0>}"}], "start": 1675060535635, "stop": 1675060535660}, {"name": "And I go to the reset password page and try to reset the password.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001033ff0fc chromedriver + 4223228\n1   chromedriver                        0x0000000103387284 chromedriver + 3732100\n2   chromedriver                        0x000000010303b5c8 chromedriver + 275912\n3   chromedriver                        0x00000001030771b8 chromedriver + 520632\n4   chromedriver                        0x00000001030af360 chromedriver + 750432\n5   chromedriver                        0x0000000103069748 chromedriver + 464712\n6   chromedriver                        0x000000010306a7f0 chromedriver + 468976\n7   chromedriver                        0x00000001033cfe08 chromedriver + 4029960\n8   chromedriver                        0x00000001033d3698 chromedriver + 4044440\n9   chromedriver                        0x00000001033d3cc0 chromedriver + 4046016\n10  chromedriver                        0x00000001033da4c4 chromedriver + 4072644\n11  chromedriver                        0x00000001033d436c chromedriver + 4047724\n12  chromedriver                        0x00000001033acbd8 chromedriver + 3886040\n13  chromedriver                        0x00000001033f0efc chromedriver + 4165372\n14  chromedriver                        0x00000001033f1050 chromedriver + 4165712\n15  chromedriver                        0x0000000103405e20 chromedriver + 4251168\n16  libsystem_pthread.dylib             0x0000000189a5d06c _pthread_start + 148\n17  libsystem_pthread.dylib             0x0000000189a57e2c thread_start + 8\n\n", "trace": "  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/web_tests/test_reset_password.py\", line 68, in reset_password_no_user\n    pages[\"about_page\"].click_cookie_pop_up_ok_btn()\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/pages/about_page.py\", line 29, in click_cookie_pop_up_ok_btn\n    BasePage.click(self, self.COOKIE_POP_UP_OK_BUTTON)\n  File \"/Users/razvan/Work/qa_manga_web/pages/base_page.py\", line 44, in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "I go to the reset password page and try to reset the password.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001033ff0fc chromedriver + 4223228\n1   chromedriver                        0x0000000103387284 chromedriver + 3732100\n2   chromedriver                        0x000000010303b5c8 chromedriver + 275912\n3   chromedriver                        0x00000001030771b8 chromedriver + 520632\n4   chromedriver                        0x00000001030af360 chromedriver + 750432\n5   chromedriver                        0x0000000103069748 chromedriver + 464712\n6   chromedriver                        0x000000010306a7f0 chromedriver + 468976\n7   chromedriver                        0x00000001033cfe08 chromedriver + 4029960\n8   chromedriver                        0x00000001033d3698 chromedriver + 4044440\n9   chromedriver                        0x00000001033d3cc0 chromedriver + 4046016\n10  chromedriver                        0x00000001033da4c4 chromedriver + 4072644\n11  chromedriver                        0x00000001033d436c chromedriver + 4047724\n12  chromedriver                        0x00000001033acbd8 chromedriver + 3886040\n13  chromedriver                        0x00000001033f0efc chromedriver + 4165372\n14  chromedriver                        0x00000001033f1050 chromedriver + 4165712\n15  chromedriver                        0x0000000103405e20 chromedriver + 4251168\n16  libsystem_pthread.dylib             0x0000000189a5d06c _pthread_start + 148\n17  libsystem_pthread.dylib             0x0000000189a57e2c thread_start + 8\n\n", "trace": "  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/web_tests/test_reset_password.py\", line 68, in reset_password_no_user\n    pages[\"about_page\"].click_cookie_pop_up_ok_btn()\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/pages/about_page.py\", line 29, in click_cookie_pop_up_ok_btn\n    BasePage.click(self, self.COOKIE_POP_UP_OK_BUTTON)\n  File \"/Users/razvan/Work/qa_manga_web/pages/base_page.py\", line 44, in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "steps": [{"name": "I click on the OK cookies button pop up to close it.", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001033ff0fc chromedriver + 4223228\n1   chromedriver                        0x0000000103387284 chromedriver + 3732100\n2   chromedriver                        0x000000010303b5c8 chromedriver + 275912\n3   chromedriver                        0x00000001030771b8 chromedriver + 520632\n4   chromedriver                        0x00000001030af360 chromedriver + 750432\n5   chromedriver                        0x0000000103069748 chromedriver + 464712\n6   chromedriver                        0x000000010306a7f0 chromedriver + 468976\n7   chromedriver                        0x00000001033cfe08 chromedriver + 4029960\n8   chromedriver                        0x00000001033d3698 chromedriver + 4044440\n9   chromedriver                        0x00000001033d3cc0 chromedriver + 4046016\n10  chromedriver                        0x00000001033da4c4 chromedriver + 4072644\n11  chromedriver                        0x00000001033d436c chromedriver + 4047724\n12  chromedriver                        0x00000001033acbd8 chromedriver + 3886040\n13  chromedriver                        0x00000001033f0efc chromedriver + 4165372\n14  chromedriver                        0x00000001033f1050 chromedriver + 4165712\n15  chromedriver                        0x0000000103405e20 chromedriver + 4251168\n16  libsystem_pthread.dylib             0x0000000189a5d06c _pthread_start + 148\n17  libsystem_pthread.dylib             0x0000000189a57e2c thread_start + 8\n\n", "trace": "  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/pages/about_page.py\", line 29, in click_cookie_pop_up_ok_btn\n    BasePage.click(self, self.COOKIE_POP_UP_OK_BUTTON)\n  File \"/Users/razvan/Work/qa_manga_web/pages/base_page.py\", line 44, in click\n    el = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1675060535660, "stop": 1675060546766}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1095b1fc0>, 'login_page': <pages.login_page.LoginPage object at 0x1095b2740>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x10a830b50>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10a8300a0>}"}, {"name": "context", "value": "{}"}], "start": 1675060535660, "stop": 1675060546768}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1095b1fc0>, 'login_page': <pages.login_page.LoginPage object at 0x1095b2740>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x10a830b50>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10a8300a0>}"}, {"name": "context", "value": "{}"}], "start": 1675060535660, "stop": 1675060546768}], "parameters": [{"name": "feature", "value": {"gherkin_ast": {"gherkin_document": {"uri": "features/forgot_password.feature"}}, "uri": "features/forgot_password.feature", "filename": "/Users/razvan/Work/qa_manga_web/web_tests/features/forgot_password.feature", "scenarios": [{"ast_node_ids": ["3"], "id": "3", "name": "Register new user and then reset password for user", "language": "en", "steps": [{"ast_node_ids": ["0"], "id": "0", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["1"], "id": "1", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["2"], "id": "2", "text": "I reset the password.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}, {"ast_node_ids": ["7"], "id": "7", "name": "Reset password for a email that does not have an account", "language": "en", "steps": [{"ast_node_ids": ["4"], "id": "4", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["5"], "id": "5", "text": "I go to the reset password page and try to reset the password.", "type": "Context"}, {"ast_node_ids": ["6"], "id": "6", "text": "I will receive an not found error.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}, {"ast_node_ids": ["11"], "id": "11", "name": "Register new user and then and then reset password for user with an expired OTP code", "language": "en", "steps": [{"ast_node_ids": ["8"], "id": "8", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["9"], "id": "9", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["10"], "id": "10", "text": "I reset the password by waiting for the first OTP to expire.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}, {"ast_node_ids": ["16"], "id": "16", "name": "Register new user and then reset password for user then login", "language": "en", "steps": [{"ast_node_ids": ["12"], "id": "12", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["13"], "id": "13", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["14"], "id": "14", "text": "I reset the password.", "type": "Context"}, {"ast_node_ids": ["15"], "id": "15", "text": "I log in with the new password.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}, {"ast_node_ids": ["22"], "id": "22", "name": "Register new user and then reset password for user then login with old password", "language": "en", "steps": [{"ast_node_ids": ["17"], "id": "17", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["18"], "id": "18", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["19"], "id": "19", "text": "I reset the password.", "type": "Context"}, {"ast_node_ids": ["20"], "id": "20", "text": "I log in with the old password.", "type": "Context"}, {"ast_node_ids": ["21"], "id": "21", "text": "I should get an error for invalid password.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}, {"ast_node_ids": ["27"], "id": "27", "name": "Register new user and then try to reset password with invalid password", "language": "en", "steps": [{"ast_node_ids": ["23"], "id": "23", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["24"], "id": "24", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["25"], "id": "25", "text": "I enter a invalid password for password reset.", "type": "Context"}, {"ast_node_ids": ["26"], "id": "26", "text": "I will get an invalid password error.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}]}}, {"name": "scenario", "value": {"ast_node_ids": ["7"], "id": "7", "name": "Reset password for a email that does not have an account", "language": "en", "steps": [{"ast_node_ids": ["4"], "id": "4", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["5"], "id": "5", "text": "I go to the reset password page and try to reset the password.", "type": "Context"}, {"ast_node_ids": ["6"], "id": "6", "text": "I will receive an not found error.", "type": "Outcome"}], "uri": "features/forgot_password.feature"}}], "start": 1675060535633, "stop": 1675060546769}], "attachments": [{"name": "log", "source": "05db2621-792a-41f1-924a-16dc7a02a4c3-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "eecf65b7-961b-4cd3-84ee-76a400f1b03f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "feature", "value": "Feature(gherkin_ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), uri='features/forgot_password.feature', filename='/Users/razvan/Work/qa_manga_web/web_tests/features/forgot_password.feature', scenarios=[Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['3'], id='3', name='Register new user and then reset password for user', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['0'], id='0', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['1'], id='1', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['2'], id='2', text='I reset the password.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['7'], id='7', name='Reset password for a email that does not have an account', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['4'], id='4', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['5'], id='5', text='I go to the reset password page and try to reset the password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['6'], id='6', text='I will receive an not found error.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['11'], id='11', name='Register new user and then and then reset password for user with an expired OTP code', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['8'], id='8', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['9'], id='9', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['10'], id='10', text='I reset the password by waiting for the first OTP to expire.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['16'], id='16', name='Register new user and then reset password for user then login', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['12'], id='12', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['13'], id='13', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['14'], id='14', text='I reset the password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['15'], id='15', text='I log in with the new password.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['22'], id='22', name='Register new user and then reset password for user then login with old password', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['17'], id='17', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['18'], id='18', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['19'], id='19', text='I reset the password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['20'], id='20', text='I log in with the old password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['21'], id='21', text='I should get an error for invalid password.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['27'], id='27', name='Register new user and then try to reset password with invalid password', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['23'], id='23', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['24'], id='24', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['25'], id='25', text='I enter a invalid password for password reset.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['26'], id='26', text='I will get an invalid password error.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...)])"}, {"name": "scenario", "value": "Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['7'], id='7', name='Reset password for a email that does not have an account', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['4'], id='4', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['5'], id='5', text='I go to the reset password page and try to reset the password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['6'], id='6', text='I will receive an not found error.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=Feature(gherkin_ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), uri='features/forgot_password.feature', filename='/Users/razvan/Work/qa_manga_web/web_tests/features/forgot_password.feature', scenarios=[Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['3'], id='3', name='Register new user and then reset password for user', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['0'], id='0', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['1'], id='1', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['2'], id='2', text='I reset the password.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), ..., Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['11'], id='11', name='Register new user and then and then reset password for user with an expired OTP code', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['8'], id='8', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['9'], id='9', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['10'], id='10', text='I reset the password by waiting for the first OTP to expire.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['16'], id='16', name='Register new user and then reset password for user then login', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['12'], id='12', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['13'], id='13', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['14'], id='14', text='I reset the password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['15'], id='15', text='I log in with the new password.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['22'], id='22', name='Register new user and then reset password for user then login with old password', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['17'], id='17', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['18'], id='18', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['19'], id='19', text='I reset the password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['20'], id='20', text='I log in with the old password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['21'], id='21', text='I should get an error for invalid password.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['27'], id='27', name='Register new user and then try to reset password with invalid password', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['23'], id='23', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['24'], id='24', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['25'], id='25', text='I enter a invalid password for password reset.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/forgot_password.feature')), ast_node_ids=['26'], id='26', text='I will get an invalid password error.', type='Outcome', scenario=...)], tags=[], uri='features/forgot_password.feature', feature=...)]))"}], "start": 1675060535633, "stop": 1675060546769, "uuid": "7c059241-a2ee-40a5-b923-22f3bf60e199", "historyId": "a7f7b82373e159f3e9a914bd8653f77e", "testCaseId": "57751742b4660f538a570923535cb2a4", "fullName": "test_reset_password#test", "labels": [{"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Forgot password tests"}, {"name": "tag", "value": "@pytest.mark.usefixtures('feature', 'scenario')"}, {"name": "tag", "value": "pytest_bdd_scenario"}, {"name": "suite", "value": "test_reset_password"}, {"name": "host", "value": "Razvans-MacBook-Pro.local"}, {"name": "thread", "value": "14332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_reset_password"}]}