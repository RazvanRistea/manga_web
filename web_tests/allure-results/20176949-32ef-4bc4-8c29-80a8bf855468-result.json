{"name": "test_1[features/login.feature-Login tests for users-Go to register from login menu]", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <Log in> to be equal to <Sign up>, but was not.", "trace": "self = <pytest_bdd.runner.ScenarioRunner object at 0x105429750>, item = <Function test_1[features/login.feature-Login tests for users-Go to register from login menu]>\n\n    def pytest_runtest_call(self, item: Item):\n        if \"pytest_bdd_scenario\" in list(map(attrgetter(\"name\"), item.iter_markers())):\n            self.request = item._request\n            self.feature = self.request.getfixturevalue(\"feature\")\n            self.scenario = self.request.getfixturevalue(\"scenario\")\n            self.plugin_manager = self.request.config.hook\n            self.plugin_manager.pytest_bdd_before_scenario(\n                request=self.request, feature=self.feature, scenario=self.scenario\n            )\n            try:\n>               self.plugin_manager.pytest_bdd_run_scenario(\n                    request=self.request,\n                    feature=self.feature,\n                    scenario=self.scenario,\n                )\n\n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:57: in pytest_bdd_run_scenario\n    return step_dispatcher(steps)\n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:67: in dispatcher\n    self.plugin_manager.pytest_bdd_run_step(\n../venv/lib/python3.10/site-packages/pytest_bdd/runner.py:108: in pytest_bdd_run_step\n    step_result = step_caller()\ntest_user_login.py:110: in go_to_registration\n    baseAssertions.assertEquals(expected_page_title, pages['login_page'].get_page_title())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api_core.microservices.apibase.assertions.userAssertions.BaseAssertions object at 0x104439ff0>, actual = 'Log in', expected = 'Sign up'\n\n    @step(\"Assert Message equals.\")\n    def assertEquals(self, actual, expected):\n>       with soft_assertions():\nE       AssertionError: soft assertion failures:\nE       1. Expected <Log in> to be equal to <Sign up>, but was not.\n\n../api_core/microservices/apibase/assertions/userAssertions.py:8: AssertionError"}, "steps": [{"name": "Go to register from login menu [features/login.feature-Login tests for users-Go to register from login menu]", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "Given User is not logged in.", "status": "passed", "steps": [{"name": "User is not logged in.", "status": "passed", "steps": [{"name": "Checking if user is not logged in.", "status": "passed", "steps": [{"name": "Assert Message equals.", "status": "passed", "parameters": [{"name": "actual", "value": "True"}, {"name": "expected", "value": "True"}], "start": 1675062099532, "stop": 1675062099532}], "start": 1675062099506, "stop": 1675062099532}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099506, "stop": 1675062099532}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099506, "stop": 1675062099532}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099506, "stop": 1675062099532}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099506, "stop": 1675062099532}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099506, "stop": 1675062099532}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099506, "stop": 1675062099532}, {"name": "And I go to the login menu and I click the register link.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <Log in> to be equal to <Sign up>, but was not.\n", "trace": "  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/web_tests/test_user_login.py\", line 110, in go_to_registration\n    baseAssertions.assertEquals(expected_page_title, pages['login_page'].get_page_title())\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 8, in assertEquals\n    with soft_assertions():\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/contextlib.py\", line 142, in __exit__\n    next(self.gen)\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "steps": [{"name": "I go to the login menu and I click the register link.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <Log in> to be equal to <Sign up>, but was not.\n", "trace": "  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/web_tests/test_user_login.py\", line 110, in go_to_registration\n    baseAssertions.assertEquals(expected_page_title, pages['login_page'].get_page_title())\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 8, in assertEquals\n    with soft_assertions():\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/contextlib.py\", line 142, in __exit__\n    next(self.gen)\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "steps": [{"name": "I click on the OK cookies button pop up to close it.", "status": "passed", "start": 1675062099532, "stop": 1675062099532}, {"name": "Click Login link", "status": "passed", "start": 1675062099532, "stop": 1675062099601}, {"name": "Get page title", "status": "passed", "start": 1675062099601, "stop": 1675062099642}, {"name": "Assert Message equals.", "status": "failed", "statusDetails": {"message": "AssertionError: soft assertion failures:\n1. Expected <Log in> to be equal to <Sign up>, but was not.\n", "trace": "  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/razvan/Work/qa_manga_web/api_core/microservices/apibase/assertions/userAssertions.py\", line 8, in assertEquals\n    with soft_assertions():\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/contextlib.py\", line 142, in __exit__\n    next(self.gen)\n  File \"/Users/razvan/Work/qa_manga_web/venv/lib/python3.10/site-packages/assertpy/assertpy.py\", line 120, in soft_assertions\n    raise AssertionError(out)\n"}, "parameters": [{"name": "actual", "value": "'Log in'"}, {"name": "expected", "value": "'Sign up'"}], "start": 1675062099642, "stop": 1675062099642}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099532, "stop": 1675062099642}], "parameters": [{"name": "pages", "value": "{'about_page': <pages.about_page.AboutPage object at 0x1062bccd0>, 'login_page': <pages.login_page.LoginPage object at 0x1062be710>, 'registration_page': <pages.registration_page.RegistrationPage object at 0x1062bc1c0>, 'forgot_password_page': <pages.forgot_password_page.ForgotPasswordPage object at 0x10623b640>}"}], "start": 1675062099532, "stop": 1675062099642}], "parameters": [{"name": "feature", "value": {"gherkin_ast": {"gherkin_document": {"uri": "features/login.feature"}}, "uri": "features/login.feature", "filename": "/Users/razvan/Work/qa_manga_web/web_tests/features/login.feature", "scenarios": [{"ast_node_ids": ["3"], "id": "3", "name": "Register new user and then log in with the newly created user", "language": "en", "steps": [{"ast_node_ids": ["0"], "id": "0", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["1"], "id": "1", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["2"], "id": "2", "text": "I go to the login menu I try to login with the newly created user.", "type": "Outcome"}], "uri": "features/login.feature"}, {"ast_node_ids": ["7"], "id": "7", "name": "Try and log with Qbet user", "language": "en", "steps": [{"ast_node_ids": ["4"], "id": "4", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["5"], "id": "5", "text": "I go to the login menu I try to login with iBet user.", "type": "Context"}, {"ast_node_ids": ["6"], "id": "6", "text": "Login was not successful due to non-existing credentials.", "type": "Outcome"}], "uri": "features/login.feature"}, {"ast_node_ids": ["11"], "id": "11", "name": "Try and log invalid credentials", "language": "en", "steps": [{"ast_node_ids": ["8"], "id": "8", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["9"], "id": "9", "text": "I go to the login menu I try to login with invalid credentials.", "type": "Context"}, {"ast_node_ids": ["10"], "id": "10", "text": "User is promted to enter a valid email.", "type": "Outcome"}], "uri": "features/login.feature"}, {"ast_node_ids": ["16"], "id": "16", "name": "Register new user and then try to log in with the valid email but invalid password", "language": "en", "steps": [{"ast_node_ids": ["12"], "id": "12", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["13"], "id": "13", "text": "I create a new user.", "type": "Context"}, {"ast_node_ids": ["14"], "id": "14", "text": "I go to the login menu I try to login with the newly created email but invalid password.", "type": "Context"}, {"ast_node_ids": ["15"], "id": "15", "text": "Login was not successful due to non-existing credentials.", "type": "Outcome"}], "uri": "features/login.feature"}, {"ast_node_ids": ["20"], "id": "20", "name": "Go to register from login menu", "language": "en", "steps": [{"ast_node_ids": ["17"], "id": "17", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["18"], "id": "18", "text": "I go to the login menu and I click the register link.", "type": "Context"}, {"ast_node_ids": ["19"], "id": "19", "text": "I am taken to the registration menu.", "type": "Outcome"}], "uri": "features/login.feature"}]}}, {"name": "scenario", "value": {"ast_node_ids": ["20"], "id": "20", "name": "Go to register from login menu", "language": "en", "steps": [{"ast_node_ids": ["17"], "id": "17", "text": "User is not logged in.", "type": "Context"}, {"ast_node_ids": ["18"], "id": "18", "text": "I go to the login menu and I click the register link.", "type": "Context"}, {"ast_node_ids": ["19"], "id": "19", "text": "I am taken to the registration menu.", "type": "Outcome"}], "uri": "features/login.feature"}}], "start": 1675062099505, "stop": 1675062099642}], "attachments": [{"name": "log", "source": "56396268-e084-4ca2-b650-5e4a210f5724-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9ce0f8f4-96e9-40c0-9822-ac1fa92495f1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "feature", "value": "Feature(gherkin_ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), uri='features/login.feature', filename='/Users/razvan/Work/qa_manga_web/web_tests/features/login.feature', scenarios=[Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['3'], id='3', name='Register new user and then log in with the newly created user', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['0'], id='0', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['1'], id='1', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['2'], id='2', text='I go to the login menu I try to login with the newly created user.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['7'], id='7', name='Try and log with Qbet user', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['4'], id='4', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['5'], id='5', text='I go to the login menu I try to login with iBet user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['6'], id='6', text='Login was not successful due to non-existing credentials.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['11'], id='11', name='Try and log invalid credentials', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['8'], id='8', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['9'], id='9', text='I go to the login menu I try to login with invalid credentials.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['10'], id='10', text='User is promted to enter a valid email.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['16'], id='16', name='Register new user and then try to log in with the valid email but invalid password', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['12'], id='12', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['13'], id='13', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['14'], id='14', text='I go to the login menu I try to login with the newly created email but invalid password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['15'], id='15', text='Login was not successful due to non-existing credentials.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['20'], id='20', name='Go to register from login menu', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['17'], id='17', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['18'], id='18', text='I go to the login menu and I click the register link.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['19'], id='19', text='I am taken to the registration menu.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...)])"}, {"name": "scenario", "value": "Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['20'], id='20', name='Go to register from login menu', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['17'], id='17', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['18'], id='18', text='I go to the login menu and I click the register link.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['19'], id='19', text='I am taken to the registration menu.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=Feature(gherkin_ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), uri='features/login.feature', filename='/Users/razvan/Work/qa_manga_web/web_tests/features/login.feature', scenarios=[Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['3'], id='3', name='Register new user and then log in with the newly created user', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['0'], id='0', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['1'], id='1', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['2'], id='2', text='I go to the login menu I try to login with the newly created user.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['7'], id='7', name='Try and log with Qbet user', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['4'], id='4', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['5'], id='5', text='I go to the login menu I try to login with iBet user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['6'], id='6', text='Login was not successful due to non-existing credentials.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['11'], id='11', name='Try and log invalid credentials', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['8'], id='8', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['9'], id='9', text='I go to the login menu I try to login with invalid credentials.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['10'], id='10', text='User is promted to enter a valid email.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), Scenario(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['16'], id='16', name='Register new user and then try to log in with the valid email but invalid password', language='en', steps=[Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['12'], id='12', text='User is not logged in.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['13'], id='13', text='I create a new user.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['14'], id='14', text='I go to the login menu I try to login with the newly created email but invalid password.', type='Context', scenario=...), Step(ast=AST(gherkin_document=GherkinDocument(comments=[], uri='features/login.feature')), ast_node_ids=['15'], id='15', text='Login was not successful due to non-existing credentials.', type='Outcome', scenario=...)], tags=[], uri='features/login.feature', feature=...), ...]))"}], "start": 1675062099505, "stop": 1675062099642, "uuid": "c8cc0379-8bf4-4da6-93f6-c19fc1dcd6cf", "historyId": "653ea97ec8d4c190c125411d4caf46e9", "testCaseId": "1591764e9bd0670ec7d554f8498a741c", "fullName": "test_user_login#test_1", "labels": [{"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Login tests for users"}, {"name": "tag", "value": "@pytest.mark.usefixtures('feature', 'scenario')"}, {"name": "tag", "value": "pytest_bdd_scenario"}, {"name": "suite", "value": "test_user_login"}, {"name": "host", "value": "Razvans-MacBook-Pro.local"}, {"name": "thread", "value": "16306-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_user_login"}]}